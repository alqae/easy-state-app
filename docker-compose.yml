services:
  proxy:
    image: nginx:alpine
    container_name: easy-state-proxy
    ports:
      - "443:443"
    restart: unless-stopped
    volumes:
      - /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem
      - /etc/letsencrypt:/etc/letsencrypt
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/ssl.conf:/etc/nginx/ssl.conf
      - ./proxy/conf.d:/etc/nginx/conf.d
    networks:
      - easy_state_proxy
    mem_limit: 128m
    cpus: 0.25

  db:
    image: mongo:6.0
    container_name: easy-state-db
    restart: always
    ports:
      - "${DB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - db_data:/data/db
    networks:
      - easy_state_proxy
    mem_limit: 128m
    cpus: 0.25

  mongo_express:
    image: mongo-express:1.0.2-20
    container_name: easy-state-mongo-express
    restart: always
    depends_on:
      - db
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    networks:
      - easy_state_proxy
    mem_limit: 128m
    cpus: 0.25

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        API_URL: ${API_URL}
    image: easy-state-api
    container_name: easy-state-api
    networks:
      - easy_state_proxy
    depends_on:
      - db
    # command: >
    #   sh -c "yarn run migration:run && yarn start"
    mem_limit: 512m
    cpus: 0.75

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: easy-state-web
    container_name: easy-state-web
    depends_on:
      - api
    networks:
      - easy_state_proxy
    mem_limit: 256m
    cpus: 0.50

volumes:
  db_data:

networks:
  easy_state_proxy:
    driver: bridge
